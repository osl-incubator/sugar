name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-branch:
    runs-on: ubuntu-latest

    timeout-minutes: 2
    concurrency:
      group: ci-check-branch-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        if: ${{ github.event_name == 'pull_request' }}
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        python_version:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"

    concurrency:
      group: ci-tests-${{ matrix.python_version }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      KXGR_PROJECT_NAME: ${{ github.run_id }}-${{ github.sha }}

    steps:
    - uses: actions/checkout@v4

    - uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        environment-file: conda/dev.yaml
        channels: nodefaults,conda-forge
        channel-priority: strict
        activate-environment: sugar
        auto-update-conda: true
        conda-solver: libmamba
        python-version: "${{ matrix.python_version }}"

    - name: check poetry lock
      run: poetry check

    - name: Install dependencies
      run: poetry install --verbose

    - name: run unit tests
      run: makim --verbose tests.unit

    - name: CLI tests
      run: makim --verbose tests.smoke

    - name: Setup tmate session
      if: "${{ failure() && (contains(github.event.pull_request.labels.*.name, 'ci:enable-debugging')) }}"
      uses: mxschmitt/action-tmate@v3

  linter:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    concurrency:
      group: ci-linter-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v4

    - uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        environment-file: conda/dev.yaml
        channels: nodefaults,conda-forge
        channel-priority: strict
        activate-environment: sugar
        auto-update-conda: true
        conda-solver: libmamba

    - name: Install dependencies
      run: |
        poetry install --verbose

    - name: Run style checks
      run: makim tests.linter
