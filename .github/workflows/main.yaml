name: main

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        python_version: ["3.8.1", "3.9", "3.10"]

    concurrency:
      group: ci-tests-${{ matrix.python_version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v3

    - name: Prepare conda environment
      run: |
        sed -i s/python\ 3\.8\.1/python\ ${{ matrix.python_version }}/ conda/dev.yaml
        cat conda/dev.yaml

    - name: create a dotenv file
      run: touch .env

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        environment-file: conda/dev.yaml
        channels: conda-forge,nodefaults
        activate-environment: containers-sugar
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: Install dependencies
      run: poetry install

    - name: run unit tests
      run: make test

    - name: CLI tests
      run: make smoke-tests

  linter:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    concurrency:
      group: ci-linter-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v3

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        environment-file: conda/dev.yaml
        channels: conda-forge,nodefaults
        activate-environment: containers-sugar
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: Install dependencies
      run: poetry install

    - name: Run style checks
      run: |
        pre-commit install
        pre-commit run --all
